{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import\"../css/Playing.css\";var Playing=/*#__PURE__*/function(_React$Component){_inherits(Playing,_React$Component);var _super=_createSuper(Playing);function Playing(props){var _this;_classCallCheck(this,Playing);_this=_super.call(this,props);_this.state={currentTime:0};_this.intervalId=\"\";return _this;}// logic for updating the current music playbak\n_createClass(Playing,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var audio=this.props.audio;this.setState({currentTime:audio.currentTime});this.intervalId=setInterval(function(){_this2.setState({currentTime:_this2.props.audio.currentTime});},100);}// Clear interval for that same thing\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.intervalId);}// Render playing screen\n},{key:\"render\",value:function render(){var _this$props=this.props,songItems=_this$props.songItems,playing=_this$props.playing,songIndex=_this$props.songIndex,audio=_this$props.audio,songImgUrl=_this$props.songImgUrl;var currentTimeRender=Math.floor(this.state.currentTime/60)+\":\"+Math.floor(this.state.currentTime%60);var durationRender=Math.floor(audio.duration/60)+\":\"+Math.floor(audio.duration%60);var percentageComplete={width:this.state.currentTime/audio.duration*100+\"%\"};if(durationRender===\"NaN:NaN\"){durationRender=\"0:00\";}if(Math.floor(this.state.currentTime%60<10)){currentTimeRender=Math.floor(this.state.currentTime/60)+\":0\"+Math.floor(this.state.currentTime%60);}return/*#__PURE__*/React.createElement(\"div\",{className:\"now-playing-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"song-details\"},/*#__PURE__*/React.createElement(\"img\",{src:songImgUrl,alt:\"songImg\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",null,songItems[songIndex]),playing&&/*#__PURE__*/React.createElement(\"h4\",{className:\"play-pause-nav\"},\"Playing\"),!playing&&/*#__PURE__*/React.createElement(\"h4\",{className:\"play-pause-nav\"},\"Paused\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"status\"},currentTimeRender,/*#__PURE__*/React.createElement(\"div\",{id:\"progress\"},/*#__PURE__*/React.createElement(\"div\",{style:percentageComplete,id:\"progress-bar\"})),durationRender));}}]);return Playing;}(React.Component);export default Playing;","map":{"version":3,"sources":["C:/Users/Yogesh/OneDrive/Desktop/ipod/Yogesh-ipod project/src/components/Playing.js"],"names":["React","Playing","props","state","currentTime","intervalId","audio","setState","setInterval","clearInterval","songItems","playing","songIndex","songImgUrl","currentTimeRender","Math","floor","durationRender","duration","percentageComplete","width","Component"],"mappings":"4tBAAC,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACD,MAAO,oBAAP,C,GAEMC,CAAAA,O,8GAEF,iBAAYC,KAAZ,CAAmB,yCACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,WAAW,CAAE,CADJ,CAAb,CAGA,MAAKC,UAAL,CAAkB,EAAlB,CALe,aAQlB,CAED;qDACA,4BAAoB,oBACRC,CAAAA,KADQ,CACE,KAAKJ,KADP,CACRI,KADQ,CAEhB,KAAKC,QAAL,CAAc,CAAEH,WAAW,CAAEE,KAAK,CAACF,WAArB,CAAd,EACA,KAAKC,UAAL,CAAkBG,WAAW,CAAC,UAAM,CAChC,MAAI,CAACD,QAAL,CAAc,CAAEH,WAAW,CAAE,MAAI,CAACF,KAAL,CAAWI,KAAX,CAAiBF,WAAhC,CAAd,EACH,CAF4B,CAE1B,GAF0B,CAA7B,CAGH,CAED;oCACA,+BAAuB,CACnBK,aAAa,CAAC,KAAKJ,UAAN,CAAb,CACH,CAED;sBACA,iBAAS,iBACwD,KAAKH,KAD7D,CACGQ,SADH,aACGA,SADH,CACcC,OADd,aACcA,OADd,CACuBC,SADvB,aACuBA,SADvB,CACkCN,KADlC,aACkCA,KADlC,CACyCO,UADzC,aACyCA,UADzC,CAEL,GAAIC,CAAAA,iBAAiB,CAAGC,IAAI,CAACC,KAAL,CAAW,KAAKb,KAAL,CAAWC,WAAX,CAAyB,EAApC,EAA0C,GAA1C,CAAgDW,IAAI,CAACC,KAAL,CAAW,KAAKb,KAAL,CAAWC,WAAX,CAAyB,EAApC,CAAxE,CACA,GAAIa,CAAAA,cAAc,CAAGF,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACY,QAAN,CAAiB,EAA5B,EAAkC,GAAlC,CAAwCH,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACY,QAAN,CAAiB,EAA5B,CAA7D,CACA,GAAMC,CAAAA,kBAAkB,CAAG,CAAEC,KAAK,CAAG,KAAKjB,KAAL,CAAWC,WAAX,CAAyBE,KAAK,CAACY,QAA/B,CAA0C,GAA3C,CAAkD,GAA3D,CAA3B,CACA,GAAGD,cAAc,GAAG,SAApB,CAA8B,CAC1BA,cAAc,CAAC,MAAf,CACH,CACD,GAAGF,IAAI,CAACC,KAAL,CAAW,KAAKb,KAAL,CAAWC,WAAX,CAAuB,EAAvB,CAA0B,EAArC,CAAH,CAA4C,CACxCU,iBAAiB,CAAGC,IAAI,CAACC,KAAL,CAAW,KAAKb,KAAL,CAAWC,WAAX,CAAyB,EAApC,EAA0C,IAA1C,CAAiDW,IAAI,CAACC,KAAL,CAAW,KAAKb,KAAL,CAAWC,WAAX,CAAyB,EAApC,CAArE,CACH,CACD,mBACI,2BAAK,SAAS,CAAC,uBAAf,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,GAAG,CAAES,UAAV,CAAsB,GAAG,CAAC,SAA1B,EADJ,cAEI,4CACI,8BAAKH,SAAS,CAACE,SAAD,CAAd,CADJ,CAEKD,OAAO,eAAI,0BAAI,SAAS,CAAC,gBAAd,YAFhB,CAGK,CAACA,OAAD,eAAY,0BAAI,SAAS,CAAC,gBAAd,WAHjB,CAFJ,CADJ,cASI,2BAAK,SAAS,CAAC,QAAf,EACKG,iBADL,cAEI,2BAAK,EAAE,CAAC,UAAR,eACI,2BAAK,KAAK,CAAEK,kBAAZ,CAAgC,EAAE,CAAC,cAAnC,EADJ,CAFJ,CAKKF,cALL,CATJ,CADJ,CAmBH,C,qBAzDiBjB,KAAK,CAACqB,S,EA6D5B,cAAepB,CAAAA,OAAf","sourcesContent":[" import React from 'react';\nimport \"../css/Playing.css\"\n\nclass Playing extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTime: 0,\n        }\n        this.intervalId = \"\";\n\n\n    }\n\n    // logic for updating the current music playbak\n    componentDidMount() {\n        const { audio } = this.props;\n        this.setState({ currentTime: audio.currentTime });\n        this.intervalId = setInterval(() => {\n            this.setState({ currentTime: this.props.audio.currentTime });\n        }, 100);\n    }\n\n    // Clear interval for that same thing\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    // Render playing screen\n    render() {\n        const { songItems, playing, songIndex, audio, songImgUrl } = this.props;\n        var currentTimeRender = Math.floor(this.state.currentTime / 60) + \":\" + Math.floor(this.state.currentTime % 60);\n        var durationRender = Math.floor(audio.duration / 60) + \":\" + Math.floor(audio.duration % 60);\n        const percentageComplete = { width: (this.state.currentTime / audio.duration * 100) + \"%\" };\n        if(durationRender===\"NaN:NaN\"){\n            durationRender=\"0:00\";\n        }\n        if(Math.floor(this.state.currentTime%60<10)){\n            currentTimeRender = Math.floor(this.state.currentTime / 60) + \":0\" + Math.floor(this.state.currentTime % 60);\n        }\n        return (\n            <div className=\"now-playing-container\">\n                <div className=\"song-details\">\n                    <img src={songImgUrl} alt=\"songImg\"></img>\n                    <div>\n                        <h6>{songItems[songIndex]}</h6>\n                        {playing && <h4 className=\"play-pause-nav\">Playing</h4>}\n                        {!playing && <h4 className=\"play-pause-nav\">Paused</h4>}\n                    </div>\n                </div>\n                <div className=\"status\">\n                    {currentTimeRender}\n                    <div id=\"progress\">\n                        <div style={percentageComplete} id=\"progress-bar\"></div>\n                    </div>\n                    {durationRender}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Playing;"]},"metadata":{},"sourceType":"module"}