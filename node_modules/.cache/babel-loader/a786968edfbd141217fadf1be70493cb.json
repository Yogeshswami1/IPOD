{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Yogesh\\\\OneDrive\\\\Desktop\\\\ipod\\\\Yogesh-ipod project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import\"../css/Navbar.css\";import BatImg from\"../static/battery.png\";// Renders navbar\nvar Navbar=/*#__PURE__*/function(_React$Component){_inherits(Navbar,_React$Component);var _super=_createSuper(Navbar);function Navbar(){var _this;_classCallCheck(this,Navbar);_this=_super.call(this);_this.state={time:_this.getCurrentTime()};_this.stateId=\"\";return _this;}// if there is no notification then iPod logo, time and battery icon\n// If there is a notification show it for 1 second and clear it\n_createClass(Navbar,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var noty=this.props.noty;if(noty===true){return;}// set an interval of 60 seconds to update time\nthis.stateId=setInterval(function(){_this2.setState({time:_this2.getCurrentTime()});},60000);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var _this$props=this.props,setNoty=_this$props.setNoty,noty=_this$props.noty;if(noty===true){setTimeout(function(){setNoty();},1000);}}// Clear the update time interval\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var noty=this.props.noty;if(noty!==true)clearInterval(this.stateId);}// fir getting current time in string\n},{key:\"getCurrentTime\",value:function getCurrentTime(){var today=new Date();var time=today.getHours()+\":\"+today.getMinutes();if(today.getMinutes()<10){time=today.getHours()+\":0\"+today.getMinutes();}return time;}// Render navbar to show either ipod logo, time or Notification\n},{key:\"render\",value:function render(){var time=this.state.time;var _this$props2=this.props,playing=_this$props2.playing,noty=_this$props2.noty,notifyText=_this$props2.notifyText;return/*#__PURE__*/React.createElement(\"div\",{className:\"bar\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"heading\"},\"iPod \",/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-wifi\"})),noty===true&&/*#__PURE__*/React.createElement(\"h5\",{className:\"notification\"},notifyText),noty===false&&/*#__PURE__*/React.createElement(\"h3\",{className:\"time\"},time),/*#__PURE__*/React.createElement(\"div\",{className:\"right-container-nav\"},playing?/*#__PURE__*/React.createElement(\"h5\",{className:\"play-pause-nav\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-play\"})):/*#__PURE__*/React.createElement(\"h5\",{className:\"play-pause-nav\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-pause\"}),\" \"),/*#__PURE__*/React.createElement(\"img\",{className:\"battery\",src:BatImg,alt:\"Battery\"})));}}]);return Navbar;}(React.Component);export default Navbar;","map":{"version":3,"sources":["C:/Users/Yogesh/OneDrive/Desktop/ipod/Yogesh-ipod project/src/components/Navbar.js"],"names":["React","BatImg","Navbar","state","time","getCurrentTime","stateId","noty","props","setInterval","setState","setNoty","setTimeout","clearInterval","today","Date","getHours","getMinutes","playing","notifyText","Component"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA;GACMC,CAAAA,M,4GACF,iBAAc,wCACV,wBACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,MAAKC,cAAL,EADG,CAAb,CAGA,MAAKC,OAAL,CAAe,EAAf,CALU,aAMb,CAED;AACA;oDACA,4BAAoB,oBACRC,CAAAA,IADQ,CACA,KAAKC,KADL,CACRD,IADQ,CAEhB,GAAIA,IAAI,GAAK,IAAb,CAAmB,CACf,OACH,CACD;AACA,KAAKD,OAAL,CAAeG,WAAW,CAAC,UAAM,CAC7B,MAAI,CAACC,QAAL,CAAc,CAAEN,IAAI,CAAE,MAAI,CAACC,cAAL,EAAR,CAAd,EACH,CAFyB,CAEvB,KAFuB,CAA1B,CAGH,C,kCAED,6BAAoB,iBACS,KAAKG,KADd,CACTG,OADS,aACTA,OADS,CACAJ,IADA,aACAA,IADA,CAEhB,GAAGA,IAAI,GAAG,IAAV,CAAe,CACXK,UAAU,CAAC,UAAY,CACnBD,OAAO,GACV,CAFS,CAER,IAFQ,CAAV,CAGH,CACJ,CAED;oCACA,+BAAuB,IACXJ,CAAAA,IADW,CACF,KAAKC,KADH,CACXD,IADW,CAEnB,GAAIA,IAAI,GAAK,IAAb,CACIM,aAAa,CAAC,KAAKP,OAAN,CAAb,CACP,CAED;8BACA,yBAAiB,CACb,GAAMQ,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAd,CACA,GAAIX,CAAAA,IAAI,CAAGU,KAAK,CAACE,QAAN,GAAmB,GAAnB,CAAyBF,KAAK,CAACG,UAAN,EAApC,CACA,GAAIH,KAAK,CAACG,UAAN,GAAqB,EAAzB,CAA6B,CACzBb,IAAI,CAAGU,KAAK,CAACE,QAAN,GAAmB,IAAnB,CAA0BF,KAAK,CAACG,UAAN,EAAjC,CACH,CACD,MAAOb,CAAAA,IAAP,CACH,CAED;sBACA,iBAAS,IACGA,CAAAA,IADH,CACY,KAAKD,KADjB,CACGC,IADH,kBAEiC,KAAKI,KAFtC,CAEGU,OAFH,cAEGA,OAFH,CAEYX,IAFZ,cAEYA,IAFZ,CAEmBY,UAFnB,cAEmBA,UAFnB,CAGL,mBACI,2BAAK,SAAS,CAAC,KAAf,eACM,0BAAI,SAAS,CAAC,SAAd,uBAA6B,yBAAG,SAAS,CAAC,aAAb,EAA7B,CADN,CAEKZ,IAAI,GAAK,IAAT,eAAiB,0BAAI,SAAS,CAAC,cAAd,EAA8BY,UAA9B,CAFtB,CAGKZ,IAAI,GAAK,KAAT,eAAkB,0BAAI,SAAS,CAAC,MAAd,EAAsBH,IAAtB,CAHvB,cAIK,2BAAK,SAAS,CAAC,qBAAf,EACIc,OAAO,cAAG,0BAAI,SAAS,CAAC,gBAAd,eAA+B,yBAAG,SAAS,CAAC,aAAb,EAA/B,CAAH,cAAyE,0BAAI,SAAS,CAAC,gBAAd,eAA+B,yBAAG,SAAS,CAAC,cAAb,EAA/B,KADpF,cAEG,2BAAK,SAAS,CAAC,SAAf,CAAyB,GAAG,CAAEjB,MAA9B,CAAsC,GAAG,CAAC,SAA1C,EAFH,CAJL,CADJ,CAWH,C,oBA/DgBD,KAAK,CAACoB,S,EAmE3B,cAAelB,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport \"../css/Navbar.css\"\nimport BatImg from \"../static/battery.png\"\n\n// Renders navbar\nclass Navbar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            time: this.getCurrentTime(),\n        }\n        this.stateId = \"\";\n    }\n\n    // if there is no notification then iPod logo, time and battery icon\n    // If there is a notification show it for 1 second and clear it\n    componentDidMount() {\n        const { noty} = this.props;\n        if (noty === true) {\n            return;\n        }\n        // set an interval of 60 seconds to update time\n        this.stateId = setInterval(() => {\n            this.setState({ time: this.getCurrentTime() });\n        }, 60000);\n    }\n\n    componentDidUpdate(){\n        const {setNoty, noty } = this.props;\n        if(noty===true){\n            setTimeout(function () {\n                setNoty();\n            },1000)\n        }\n    }\n\n    // Clear the update time interval\n    componentWillUnmount() {\n        const { noty } = this.props;\n        if (noty !== true)\n            clearInterval(this.stateId);\n    }\n\n    // fir getting current time in string\n    getCurrentTime() {\n        const today = new Date();\n        var time = today.getHours() + \":\" + today.getMinutes();\n        if (today.getMinutes() < 10) {\n            time = today.getHours() + \":0\" + today.getMinutes();\n        }\n        return time;\n    }\n\n    // Render navbar to show either ipod logo, time or Notification\n    render() {\n        const { time } = this.state;\n        const { playing, noty , notifyText} = this.props;\n        return (\n            <div className=\"bar\">\n                { <h5 className=\"heading\">iPod <i className=\"fas fa-wifi\"></i></h5>}\n                {noty === true && <h5 className=\"notification\">{notifyText}</h5>}\n                {noty === false && <h3 className=\"time\">{time}</h3>}\n                {<div className=\"right-container-nav\">\n                    {playing ? <h5 className=\"play-pause-nav\"><i className=\"fas fa-play\"></i></h5> : <h5 className=\"play-pause-nav\"><i className=\"fas fa-pause\"></i> </h5>}\n                    <img className=\"battery\" src={BatImg} alt=\"Battery\" />\n                </div>}\n            </div>\n        )\n    }\n}\n\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}